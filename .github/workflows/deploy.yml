# Auto-generated by AutoRollback Tool
# Generated on: 2025-10-31T09:33:14.077487Z

name: Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'Staging'

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
  
jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build

      
      # Tests skipped (runTests=false)
      
      - name: Determine build output directory
        id: build-path
        run: |
          # Check for common build output directories
          if [ -d "./build" ]; then
            echo "path=./build" >> $GITHUB_OUTPUT
            echo "‚úÖ Found build output in ./build"
          elif [ -d "./dist" ]; then
            echo "path=./dist" >> $GITHUB_OUTPUT
            echo "‚úÖ Found build output in ./dist"
          elif [ -d "./target" ]; then
            echo "path=./target" >> $GITHUB_OUTPUT
            echo "‚úÖ Found build output in ./target"
          elif [ -d "./publish" ]; then
            echo "path=./publish" >> $GITHUB_OUTPUT
            echo "‚úÖ Found build output in ./publish"
          elif [ -d "./build/libs" ]; then
            echo "path=./build/libs" >> $GITHUB_OUTPUT
            echo "‚úÖ Found build output in ./build/libs"
          else
            echo "‚ùå No build output directory found!"
            echo "Checked: ./build, ./dist, ./target, ./publish, ./build/libs"
            exit 1
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ${{ steps.build-path.outputs.path }}
          retention-days: 1

  deploy:
    name: Deploy to Azure
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./artifact
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: mubasir-app-dev-a0wws2
          package: ./artifact

      
      - name: Health Check
        run: |
          echo "‚è≥ Waiting 30 seconds for application to start..."
          sleep 30
          
          echo "üîç Performing health check..."
          MAX_RETRIES=10
          RETRY_COUNT=0
          
          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" ${{ secrets.APP_URL }}/healthz || echo "000")
            
            if [ "$HTTP_STATUS" = "200" ]; then
              echo "‚úÖ Health check passed! Application is healthy."
              exit 0
            fi
            
            echo "‚ö†Ô∏è  Health check failed (HTTP $HTTP_STATUS). Retry $((RETRY_COUNT + 1))/$MAX_RETRIES..."
            sleep 10
            RETRY_COUNT=$((RETRY_COUNT + 1))
          done
          
          echo "‚ùå Health check failed after $MAX_RETRIES attempts!"
          echo "üîÑ Triggering automatic rollback..."
          exit 1
      
      - name: Trigger Rollback on Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'rollback.yml',
              ref: 'main',
              inputs: {
                reason: 'Deployment health check failed',
                failed_run_id: context.runId.toString()
              }
            });
